{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from \"react\";\nimport { projectFirestore } from '../Firebase/config';\nexport const useCollection = (collection, _query, _orderBy) => {\n  _s();\n\n  const [documents, setDocuments] = useState(null);\n  const [error, setError] = useState(null); // if we don't use a ref --> infinite loop in useEffect\n  // _query is an array and is \"different\" on every function call\n\n  const query = useRef(_query).current;\n  const orderBy = useRef(_orderBy).current;\n  useEffect(() => {\n    let ref = projectFirestore.collection(collection);\n\n    if (query) {\n      ref = ref.where(...query);\n    }\n\n    if (orderBy) {\n      ref = ref.orderBy(...orderBy);\n    }\n\n    const unsubscribe = ref.onSnapshot(snapshot => {\n      let results = [];\n      snapshot.docs.forEach(doc => {\n        results.push({ ...doc.data(),\n          id: doc.id\n        });\n      }); // update state\n\n      setDocuments(results);\n      setError(null);\n    }, error => {\n      console.log(error);\n      setError('could not fetch the data');\n    }); // unsubscribe on unmount\n\n    return () => unsubscribe();\n  }, [collection, query, orderBy]);\n  return {\n    documents,\n    error\n  };\n};\n\n_s(useCollection, \"4sqIJUBl6p544zsFTSG2bJoO5tg=\");","map":{"version":3,"names":["useEffect","useState","useRef","projectFirestore","useCollection","collection","_query","_orderBy","documents","setDocuments","error","setError","query","current","orderBy","ref","where","unsubscribe","onSnapshot","snapshot","results","docs","forEach","doc","push","data","id","console","log"],"sources":["/Users/kery/Desktop/event_planner-development/src/hooks/useCollection.js"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\"\nimport { projectFirestore } from '../Firebase/config'\n\nexport const useCollection = (collection, _query, _orderBy) => {\n  const [documents, setDocuments] = useState(null)\n  const [error, setError] = useState(null)\n\n  // if we don't use a ref --> infinite loop in useEffect\n  // _query is an array and is \"different\" on every function call\n  const query = useRef(_query).current\n  const orderBy = useRef(_orderBy).current\n\n  useEffect(() => {\n    let ref = projectFirestore.collection(collection)\n\n    if (query) {\n      ref = ref.where(...query)\n    }\n    if (orderBy) {\n      ref = ref.orderBy(...orderBy)\n    }\n\n    const unsubscribe = ref.onSnapshot(snapshot => {\n      let results = []\n      snapshot.docs.forEach(doc => {\n        results.push({...doc.data(), id: doc.id})\n      });\n      \n      // update state\n      setDocuments(results)\n      setError(null)\n    }, error => {\n      console.log(error)\n      setError('could not fetch the data')\n    })\n\n    // unsubscribe on unmount\n    return () => unsubscribe()\n\n  }, [collection, query, orderBy])\n\n  return { documents, error }\n}"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,UAAD,EAAaC,MAAb,EAAqBC,QAArB,KAAkC;EAAA;;EAC7D,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC,CAF6D,CAI7D;EACA;;EACA,MAAMW,KAAK,GAAGV,MAAM,CAACI,MAAD,CAAN,CAAeO,OAA7B;EACA,MAAMC,OAAO,GAAGZ,MAAM,CAACK,QAAD,CAAN,CAAiBM,OAAjC;EAEAb,SAAS,CAAC,MAAM;IACd,IAAIe,GAAG,GAAGZ,gBAAgB,CAACE,UAAjB,CAA4BA,UAA5B,CAAV;;IAEA,IAAIO,KAAJ,EAAW;MACTG,GAAG,GAAGA,GAAG,CAACC,KAAJ,CAAU,GAAGJ,KAAb,CAAN;IACD;;IACD,IAAIE,OAAJ,EAAa;MACXC,GAAG,GAAGA,GAAG,CAACD,OAAJ,CAAY,GAAGA,OAAf,CAAN;IACD;;IAED,MAAMG,WAAW,GAAGF,GAAG,CAACG,UAAJ,CAAeC,QAAQ,IAAI;MAC7C,IAAIC,OAAO,GAAG,EAAd;MACAD,QAAQ,CAACE,IAAT,CAAcC,OAAd,CAAsBC,GAAG,IAAI;QAC3BH,OAAO,CAACI,IAAR,CAAa,EAAC,GAAGD,GAAG,CAACE,IAAJ,EAAJ;UAAgBC,EAAE,EAAEH,GAAG,CAACG;QAAxB,CAAb;MACD,CAFD,EAF6C,CAM7C;;MACAjB,YAAY,CAACW,OAAD,CAAZ;MACAT,QAAQ,CAAC,IAAD,CAAR;IACD,CATmB,EASjBD,KAAK,IAAI;MACViB,OAAO,CAACC,GAAR,CAAYlB,KAAZ;MACAC,QAAQ,CAAC,0BAAD,CAAR;IACD,CAZmB,CAApB,CAVc,CAwBd;;IACA,OAAO,MAAMM,WAAW,EAAxB;EAED,CA3BQ,EA2BN,CAACZ,UAAD,EAAaO,KAAb,EAAoBE,OAApB,CA3BM,CAAT;EA6BA,OAAO;IAAEN,SAAF;IAAaE;EAAb,CAAP;AACD,CAvCM;;GAAMN,a"},"metadata":{},"sourceType":"module"}